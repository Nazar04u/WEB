version: '3.8'

services:
  # Django Backend
  backend:
    build:
      context: ./backend/WEB/WEB
      dockerfile: Dockerfile
    volumes:
      - ./backend/WEB/WEB:/app
    ports:
      - "8001:8000"
    depends_on:
      - rabbitmq
      - postgres
      - celery
    environment:
      - DATABASE_NAME=WEB_DB
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=24122004naz
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//  # Add this if backend interacts with Celery


  # Celery Worker
  celery:
    build:
      context: ./backend/WEB/WEB
      dockerfile: Dockerfile.celery
    volumes:
      - ./backend/WEB/WEB:/app
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//  # Updated broker URL to use RabbitMQ service name
    command: celery -A WEB worker -l info --pool=gevent --concurrency=8

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_ALLOW_REMOTE_LOGINS: "true"
  # PostgreSQL
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_DB=WEB_DB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=24122004naz
    volumes:
      - pgdbdata:/var/lib/postgresql/data/

  # React Frontend
  frontend:
    build:
      context: ./frontend/realization
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://backend:8001/api

volumes:
  pgdbdata:
